{"version":3,"sources":["components/Marker.js","components/Polyline.js","components/MarkerForm.js","components/MarkerList.js","components/Loader.js","components/YandexMap.js","App.js","loadScriptMap.js","index.js"],"names":["Marker","clickHandeler","index","deleteMarker","e","preventDefault","_this2","this","_this$props","props","addDragEndListener","text","id","mapY","ymaps","coordinates","getCenter","placemark","Placemark","balloonContent","draggable","geoObjects","add","events","geometry","getCoordinates","timestamp","remove","_this$props2","opacity","isDragging","connectDragSource","connectDropTarget","react_default","a","createElement","className","style","role","aria-label","onClick","Component","flow","DragSource","beginDrag","connect","monitor","dragSource","DropTarget","hover","component","dragIndex","getItem","hoverIndex","moveMarker","dropTarget","Polyline","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","polyline","markers","setCoordinates","MarkerForm","onChangeMarkerTitle","setState","target","value","onSubmit","addMarker","Date","now","state","type","placeholder","onChange","MarkerList","marker","concat","toConsumableArray","update","$splice","dragCard","markersArr","coords","forEach","push","components_Marker","key","components_MarkerForm","components_Polyline","Loader","YandexMap","width","height","App","_Component","loaded","mapId","inherits","createClass","url","Promise","resolve","reject","script","document","body","getElementsByTagName","match","window","initYandexMap","Error","src","onerror","appendChild","then","initMap","catch","error","console","_this$state","components_MarkerList","components_Loader","components_YandexMap","Map","center","zoom","DragDropContext","HTML5Backend","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.9bc026b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {DragSource, DropTarget} from 'react-dnd';\nimport flow from 'lodash/flow';\n\nconst cardSource = {\n  beginDrag(props) {\n    return {\n      id: props.id,\n      index: props.index,\n    };\n  },\n};\n\nconst cardTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveMarker(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nclass Marker extends Component {\n  componentDidMount() {\n    const {addDragEndListener, text, id, mapY, ymaps} = this.props;\n    const coordinates = mapY.getCenter();\n\n    const placemark = new ymaps.Placemark(coordinates, {\n      balloonContent: this.props.text\n    }, { \n      draggable: true \n    });\n\n    this.placemark = placemark;\n    \n    mapY.geoObjects.add(placemark); \n\n    placemark.events.add('dragend', () => {\n      const coordinates = placemark.geometry.getCoordinates();\n      addDragEndListener(this.props.index, {timestamp: id, text, coordinates});\n    });\n  }\n\n  componentWillUnmount() {\n    this.placemark.events.remove('dragend');\n    this.props.mapY.geoObjects.remove(this.placemark);\n  }\n\n  render() {\n    const {\n      text, \n      index, \n      deleteMarker,\n      isDragging,\n      connectDragSource,\n      connectDropTarget \n    } = this.props;\n\n    const opacity = isDragging ? 0 : 1;\n\n    return (\n      connectDragSource(\n        connectDropTarget(\n          <li className='marker' style={{opacity}}>\n            <p className='marker__text'>{text}</p>\n            \n            <span role=\"img\" aria-label=\"close-emoji\" onClick={this.clickHandeler(index, deleteMarker)}>✖️</span>\n          </li>\n        ),\n      )\n    );\n  }\n\n  clickHandeler = (index, deleteMarker) => (e) => {\n    e.preventDefault();\n    deleteMarker(index);\n  }\n}\n\nexport default flow(\n  DragSource(\n    'marker',\n    cardSource,\n    (connect, monitor) => ({\n      connectDragSource: connect.dragSource(),\n      isDragging: monitor.isDragging(),\n    }),\n  ),\n  DropTarget('marker', cardTarget, (connect) => ({\n    connectDropTarget: connect.dropTarget(),\n  }))\n)(Marker);\n\nMarker.propTypes = {\n  id: PropTypes.number.isRequired,\n  deleteMarker: PropTypes.func.isRequired, \n  addDragEndListener: PropTypes.func.isRequired, \n  text: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired\n};\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Polyline extends Component {\r\n  constructor() {\r\n    super();\r\n    this.polyline = null;\r\n    this.index = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {markers, ymaps, mapY} = this.props;\r\n    this.polyline = new ymaps.Polyline(markers);\r\n    mapY.geoObjects.add(this.polyline);\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    const {markers} = this.props;\r\n    this.polyline.geometry.setCoordinates(markers);\r\n  }\r\n  \r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nPolyline.propTypes = {\r\n  markers: PropTypes.array.isRequired,\r\n  mapY: PropTypes.object.isRequired,\r\n  ymaps: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Polyline;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MarkerForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      text: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <form className='marker-form' onSubmit={this.onSubmit}>\r\n        <input className='marker-form__input'\r\n          type=\"text\"\r\n          value={this.state.text}\r\n          placeholder=\"Новая точка маршрута\" \r\n          onChange={this.onChangeMarkerTitle} />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  onChangeMarkerTitle = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addMarker(Date.now(), this.state.text, this.props.mapY.getCenter());\r\n    this.setState({text: ''});\r\n  }\r\n}\r\n\r\nMarkerForm.propTypes = {\r\n  addMarker: PropTypes.func.isRequired, \r\n  mapY: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MarkerForm;\r\n","import React, {Component} from 'react';\r\nimport update from 'immutability-helper';\r\nimport Marker from './Marker';\r\nimport Polyline from './Polyline';\r\nimport PropTypes from 'prop-types';\r\nimport MarkerForm from './MarkerForm';\r\n\r\nclass MarkerList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      markers: [],\r\n    };\r\n  }\r\n  \r\n  render() {  \r\n    const {markers} = this.state;\r\n    const {mapY, ymaps} = this.props;\r\n    let markersArr = [];\r\n    let coords = [];\r\n\r\n    markers.forEach((marker, index) => {\r\n      coords.push(marker.coordinates);\r\n      markersArr.push(<Marker\r\n        key={marker.timestamp}\r\n        text={marker.text}\r\n        id={marker.timestamp}\r\n        deleteMarker={this.deleteMarker}\r\n        index={index}\r\n        moveMarker={this.moveMarker}\r\n        addDragEndListener={this.addDragEndListener} \r\n        ymaps={ymaps} \r\n        mapY={mapY} />);\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <MarkerForm \r\n          addMarker={this.addMarker} \r\n          mapY={mapY} />\r\n\r\n        <ul className='marker-list'>\r\n          {markersArr}\r\n        </ul>\r\n\r\n        <Polyline \r\n          markers={coords} \r\n          ymaps={ymaps} \r\n          mapY={mapY} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addMarker = (id, text, coordinates) => {\r\n    const marker = {timestamp: id, text, coordinates};\r\n    this.setState({\r\n      markers: [...this.state.markers, marker]\r\n    });\r\n  }\r\n\r\n  deleteMarker = (index) => {\r\n    this.setState(\r\n      update(this.state, {\r\n        markers: {\r\n          $splice: [[index, 1]]\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  addDragEndListener = (index, placemark) => {\r\n    this.setState(\r\n      update(this.state, {\r\n        markers: {\r\n          $splice: [[index, 1, placemark]]\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  moveMarker = (dragIndex, hoverIndex) => {\r\n    const {markers} = this.state;\r\n    const dragCard = markers[dragIndex];\r\n\r\n    this.setState(\r\n      update(this.state, {\r\n        markers: {\r\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]],\r\n        },\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nMarkerList.propTypes = {\r\n  mapY: PropTypes.object.isRequired,\r\n  ymaps: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MarkerList;\r\n\r\n\r\n  ","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <p>Loading...</p>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, {Component} from 'react';\r\n\r\nclass YandexMap extends Component {\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        id={this.props.id} \r\n        className='yandex-map'\r\n        style={{width: '450px', height: '450px'}}>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default YandexMap;\r\n","import React, { Component } from 'react';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport loadScriptMap from './loadScriptMap';\r\nimport MarkerList from './components/MarkerList';\r\nimport Loader from './components/Loader';\r\nimport YandexMap from './components/YandexMap';\r\n\r\nexport class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loaded: false,\r\n      mapId: 'YMapsID',\r\n      mapY: null,\r\n      ymaps: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    loadScriptMap('https://api-maps.yandex.ru/2.1/?lang=ru_RU&onload=initYandexMap')\r\n      .then((ymaps) => {\r\n        this.initMap(ymaps);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  render() {\r\n    const {loaded, mapId, ymaps, mapY} = this.state;\r\n    return (      \r\n      <div className='map'>\r\n        {loaded ? (\r\n          <MarkerList ymaps={ymaps} mapY={mapY}/>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n        <YandexMap id={mapId} />\r\n      </div>);\r\n  }\r\n\r\n  initMap(ymaps) {\r\n    const mapY = new ymaps.Map(this.state.mapId, {\r\n      center: [55.87, 37.66],\r\n      zoom: 10\r\n    });\r\n\r\n    this.setState({\r\n      loaded: true,\r\n      mapY: mapY,\r\n      ymaps: ymaps\r\n    });\r\n  }\r\n}\r\nexport default DragDropContext(HTML5Backend)(App);\r\n","export default function loadScriptMap(url) {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement('script'); \r\n    const body = document.getElementsByTagName('body')[0];\r\n    \r\n    if(url.match(/onload=initYandexMap/)) {\r\n      window.initYandexMap = (ymaps) => resolve(ymaps);\r\n    } else {\r\n      reject(new Error('require onload func'));\r\n    }\r\n\r\n    script.src = url;\r\n    script.onerror = reject;\r\n    body.appendChild(script);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}